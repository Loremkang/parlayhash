./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=185,mops=5955
./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=125,mops=5895
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=442,mops=1033
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=418,mops=1022

./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=208,mops=1808
./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=25,insert_mops=106,mops=1805
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=441,mops=843
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=439,mops=842

./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=217,mops=813
./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=229,mops=812
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=441,mops=590
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=441,mops=590

./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=24,insert_mops=10,mops=6046
./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=24,insert_mops=10,mops=6164
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=438,mops=1717
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=440,mops=1731

./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=111,mops=1031
./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=227,mops=1034
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=443,mops=1059
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=441,mops=1071

./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=239,mops=291
./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=215,mops=294
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=441,mops=490
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=440,mops=526

./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=179,mops=1328
./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=177,mops=1333
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=438,mops=1383
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=438,mops=1425

./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=70,insert_mops=235,mops=1444
./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=70,insert_mops=235,mops=1445
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=221,mops=747
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=227,mops=747
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=232,mops=346
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=218,mops=346

initial insert geometric mean of mops = 356.861
benchmark geometric mean of mops = 1104.01
bytes/element geometric mean = 24.3338
