./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=201,mops=6664
./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=197,mops=6512
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=444,mops=1046
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=438,mops=1040

./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=203,mops=1889
./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=214,mops=1884
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=443,mops=863
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=440,mops=862

./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=216,mops=823
./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=237,mops=824
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=441,mops=601
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=441,mops=601

./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=24,insert_mops=69,mops=7154
./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=25,insert_mops=56,mops=7053
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=442,mops=1810
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=444,mops=1800

./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=25,insert_mops=140,mops=1023
./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=235,mops=1000
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=445,mops=1080
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=442,mops=1098

./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=24,insert_mops=160,mops=257
./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=244,mops=317
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=445,mops=473
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=443,mops=529

./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=33,insert_mops=74,mops=1911
./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=33,insert_mops=91,mops=1892
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=444,mops=1494
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=443,mops=1441

./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=241,mops=1528
./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=240,mops=1537
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=230,mops=794
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=229,mops=789
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=234,mops=356
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=229,mops=355
initial insert geometric mean of mops = 302.568
benchmark geometric mean of mops = 1165.69
bytes/element geometric mean = 24.2829
