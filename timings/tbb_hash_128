./tbb_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=380
./tbb_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=380
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=342
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=342

./tbb_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=269
./tbb_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=16,mops=269
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=260
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=260

./tbb_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=73
./tbb_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=73
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=72
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=72

./tbb_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=20,mops=3
./tbb_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=2
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=8
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=8

./tbb_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=27
./tbb_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=20
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=45
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=36

./tbb_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=11
./tbb_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=8
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=15
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=22

./tbb_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=21,mops=266
./tbb_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=22,mops=266
./tbb_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=23,mops=258
./tbb_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=23,mops=258

./tbb_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=23,mops=8
./tbb_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=-2,insert_mops=23,mops=6
./tbb_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=24,mops=69
./tbb_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=24,mops=51
./tbb_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=24,mops=32
./tbb_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=24,mops=31

initial insert geometric mean of mops = 22.9558
benchmark geometric mean of mops = 52.7642
bytes/element geometric mean = -nan
