./libcuckoo,5%update,n=10000,p=144,long_long,z=0,grow=0,mem_pe=58,insert_mops=110,mops=419
./libcuckoo,5%update,n=10000,p=144,long_long,z=0,grow=0,mem_pe=58,insert_mops=95,mops=434
./libcuckoo,5%update,n=10000000,p=144,long_long,z=0,grow=0,mem_pe=33,insert_mops=197,mops=285
./libcuckoo,5%update,n=10000000,p=144,long_long,z=0,grow=0,mem_pe=33,insert_mops=198,mops=209

./libcuckoo,50%update,n=10000,p=144,long_long,z=0,grow=0,mem_pe=58,insert_mops=95,mops=232
./libcuckoo,50%update,n=10000,p=144,long_long,z=0,grow=0,mem_pe=58,insert_mops=97,mops=196
./libcuckoo,50%update,n=10000000,p=144,long_long,z=0,grow=0,mem_pe=33,insert_mops=192,mops=196
./libcuckoo,50%update,n=10000000,p=144,long_long,z=0,grow=0,mem_pe=33,insert_mops=190,mops=206

./libcuckoo,5%update,n=10000,p=144,long_long,z=0.99,grow=0,mem_pe=58,insert_mops=95,mops=1
./libcuckoo,5%update,n=10000,p=144,long_long,z=0.99,grow=0,mem_pe=58,insert_mops=35,mops=0
./libcuckoo,5%update,n=10000000,p=144,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=186,mops=1
./libcuckoo,5%update,n=10000000,p=144,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=195,mops=1

./libcuckoo,50%update,n=10000,p=144,long_long,z=0.99,grow=0,mem_pe=58,insert_mops=102,mops=1
./libcuckoo,50%update,n=10000,p=144,long_long,z=0.99,grow=0,mem_pe=58,insert_mops=100,mops=1
./libcuckoo,50%update,n=10000000,p=144,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=191,mops=1
./libcuckoo,50%update,n=10000000,p=144,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=196,mops=1

./libcuckoo,5%update,n=10000,p=144,int,z=0,grow=0,mem_pe=42,insert_mops=105,mops=291
./libcuckoo,5%update,n=10000,p=144,int,z=0,grow=0,mem_pe=42,insert_mops=102,mops=289
./libcuckoo,5%update,n=10000000,p=144,int,z=0,grow=0,mem_pe=17,insert_mops=213,mops=261
./libcuckoo,5%update,n=10000000,p=144,int,z=0,grow=0,mem_pe=17,insert_mops=207,mops=317

./libcuckoo,5%update,n=1229916,p=144,string_4xlong,trigram,grow=0,mem_pe=141,insert_mops=133,mops=2
./libcuckoo,5%update,n=1229916,p=144,string_4xlong,trigram,grow=0,mem_pe=141,insert_mops=166,mops=2
./libcuckoo,50%update,n=1229916,p=144,string_4xlong,trigram,grow=0,mem_pe=141,insert_mops=150,mops=1
./libcuckoo,50%update,n=1229916,p=144,string_4xlong,trigram,grow=0,mem_pe=141,insert_mops=148,mops=1
initial insert geometric mean of mops = 173.635
benchmark geometric mean of mops = 19.9816
bytes/element geometric mean = 43.5812
