./folly_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=261,insert_mops=53,mops=2774
./folly_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=193,insert_mops=55,mops=3035
./folly_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=80,insert_mops=241,mops=531
./folly_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=80,insert_mops=289,mops=514

./folly_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=158,insert_mops=9,mops=125
./folly_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=153,insert_mops=10,mops=83
./folly_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=80,insert_mops=245,mops=65
./folly_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=80,insert_mops=303,mops=182

./folly_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=201,insert_mops=18,mops=32
./folly_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=197,insert_mops=16,mops=32
./folly_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=80,insert_mops=250,mops=30
./folly_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=80,insert_mops=287,mops=30

./folly_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=188,insert_mops=13,mops=3874
./folly_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=191,insert_mops=5,mops=3853
./folly_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=80,insert_mops=307,mops=915
./folly_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=80,insert_mops=302,mops=913

./folly_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=195,insert_mops=15,mops=174
./folly_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=204,insert_mops=11,mops=168
./folly_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=80,insert_mops=246,mops=152
./folly_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=80,insert_mops=300,mops=152

./folly_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=197,insert_mops=18,mops=35
./folly_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=196,insert_mops=17,mops=34
./folly_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=80,insert_mops=245,mops=28
./folly_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=80,insert_mops=294,mops=28

./folly_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=187,insert_mops=15,mops=157
./folly_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=185,insert_mops=15,mops=157
./folly_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=64,insert_mops=291,mops=174
./folly_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=64,insert_mops=284,mops=173

./folly_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=147,insert_mops=235,mops=899
./folly_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=148,insert_mops=237,mops=900
./folly_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=148,insert_mops=216,mops=148
./folly_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=148,insert_mops=226,mops=148
./folly_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=148,insert_mops=233,mops=28
./folly_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=148,insert_mops=230,mops=27
initial insert geometric mean of mops = 248.149
benchmark geometric mean of mops = 176.864
bytes/element geometric mean = 91.904
