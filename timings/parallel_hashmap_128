./parallel_hashmap,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=169,insert_mops=0,mops=507
./parallel_hashmap,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=59,insert_mops=81,mops=504
./parallel_hashmap,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=33,insert_mops=259,mops=449
./parallel_hashmap,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=33,insert_mops=252,mops=448

./parallel_hashmap,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=32,insert_mops=122,mops=474
./parallel_hashmap,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=33,insert_mops=128,mops=473
./parallel_hashmap,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=33,insert_mops=230,mops=402
./parallel_hashmap,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=33,insert_mops=225,mops=401

./parallel_hashmap,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=62,insert_mops=144,mops=369
./parallel_hashmap,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=39,insert_mops=137,mops=368
./parallel_hashmap,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=33,insert_mops=225,mops=316
./parallel_hashmap,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=33,insert_mops=221,mops=316

./parallel_hashmap,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=125,mops=30
./parallel_hashmap,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=70,mops=30
./parallel_hashmap,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=198,mops=61
./parallel_hashmap,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=197,mops=61

./parallel_hashmap,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=43,insert_mops=52,mops=22
./parallel_hashmap,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=46,insert_mops=110,mops=23
./parallel_hashmap,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=197,mops=43
./parallel_hashmap,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=192,mops=43

./parallel_hashmap,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=38,insert_mops=71,mops=16
./parallel_hashmap,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=44,insert_mops=104,mops=17
./parallel_hashmap,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=196,mops=29
./parallel_hashmap,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=33,insert_mops=199,mops=30

./parallel_hashmap,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=13,insert_mops=147,mops=481
./parallel_hashmap,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=14,insert_mops=146,mops=481
./parallel_hashmap,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=10,insert_mops=275,mops=442
./parallel_hashmap,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=10,insert_mops=269,mops=439

./parallel_hashmap,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=137,insert_mops=97,mops=52
./parallel_hashmap,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=137,insert_mops=100,mops=53
./parallel_hashmap,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=136,insert_mops=96,mops=42
./parallel_hashmap,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=136,insert_mops=93,mops=42
./parallel_hashmap,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=137,insert_mops=93,mops=31
./parallel_hashmap,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=137,insert_mops=98,mops=31
initial insert geometric mean of mops = 137.311
benchmark geometric mean of mops = 112.544
bytes/element geometric mean = 35.9595
